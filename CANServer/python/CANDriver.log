2017-06-20 16:39:06,990 - root - INFO - Logger setup done, starting web server
2017-06-20 16:39:06,991 - CANServer - INFO - Logger Added
2017-06-20 16:39:24,550 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 16:39:24,559 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 16:39:34,824 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 16:39:34,826 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 16:39:45,721 - can.socketcan.native - INFO - Created a socket
2017-06-20 16:39:45,722 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 16:39:45,740 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    data = str(self.translate(canNode.sdo[self.key].raw))
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 16:49:20,496 - root - INFO - Logger setup done, starting web server
2017-06-20 16:49:20,497 - CANServer - INFO - Logger Added
2017-06-20 16:49:29,607 - can.socketcan.native - INFO - Created a socket
2017-06-20 16:49:29,608 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 16:49:29,621 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    data = str(self.translate(canNode.sdo[self.key].raw))
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 16:51:36,651 - root - INFO - Logger setup done, starting web server
2017-06-20 16:51:36,651 - CANServer - INFO - Logger Added
2017-06-20 16:51:46,088 - can.socketcan.native - INFO - Created a socket
2017-06-20 16:51:46,089 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 16:51:46,102 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 16:51:46,103 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 16:51:46,110 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:04:09,630 - root - INFO - Logger setup done, starting web server
2017-06-20 17:04:09,631 - CANServer - INFO - Logger Added
2017-06-20 17:04:15,047 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:04:15,048 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:04:15,060 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:04:15,061 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:04:15,068 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:05:11,597 - root - INFO - Logger setup done, starting web server
2017-06-20 17:05:11,598 - CANServer - INFO - Logger Added
2017-06-20 17:05:18,290 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:05:18,290 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:05:18,301 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    data = str(self.translate(canNode.sdo[self.key].raw))
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:08:30,601 - root - INFO - Logger setup done, starting web server
2017-06-20 17:08:30,602 - CANServer - INFO - Logger Added
2017-06-20 17:08:40,018 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:08:40,018 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:08:40,034 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    data = str(self.translate(canNode.sdo[self.key].phys))
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 88, in phys
    value = self.od.decode_phys(self.raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:10:25,275 - root - INFO - Logger setup done, starting web server
2017-06-20 17:10:25,276 - CANServer - INFO - Logger Added
2017-06-20 17:10:31,581 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:10:31,582 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:10:31,593 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    data = str(self.translate(canNode.sdo[self.key].raw))
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:12:40,953 - root - INFO - Logger setup done, starting web server
2017-06-20 17:12:40,954 - CANServer - INFO - Logger Added
2017-06-20 17:12:49,026 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:12:49,027 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:12:49,045 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=TypeError("unsupported operand type(s) for -: 'bytes' and 'int'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    data = str(self.translate(canNode.sdo[self.key].raw))
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 26, in translate
    valueScaled = float(value - self.fromMin) / float(fromSpan)
TypeError: unsupported operand type(s) for -: 'bytes' and 'int'
2017-06-20 17:13:06,460 - root - INFO - Logger setup done, starting web server
2017-06-20 17:13:06,461 - CANServer - INFO - Logger Added
2017-06-20 17:13:10,838 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:13:10,839 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:13:10,851 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:13:10,852 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:13:10,860 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:13:56,903 - root - INFO - Logger setup done, starting web server
2017-06-20 17:13:56,904 - CANServer - INFO - Logger Added
2017-06-20 17:14:02,408 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:14:02,409 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:14:02,427 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=TypeError("unsupported operand type(s) for -: 'bytes' and 'int'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    data = str(self.translate(canNode.sdo[self.key].raw))
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 26, in translate
    valueScaled = float(value - self.fromMin) / float(fromSpan)
TypeError: unsupported operand type(s) for -: 'bytes' and 'int'
2017-06-20 17:15:10,542 - root - INFO - Logger setup done, starting web server
2017-06-20 17:15:10,543 - CANServer - INFO - Logger Added
2017-06-20 17:15:14,519 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:15:14,520 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:15:14,533 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:15:14,534 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:15:14,541 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:15:14,547 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:18,578 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:18,583 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:22,669 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:22,672 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:26,786 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:26,790 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:30,856 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:30,860 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:34,900 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:34,905 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:38,951 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:38,955 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:43,124 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:43,130 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:47,249 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:47,254 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:51,342 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:51,345 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:55,433 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:55,437 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:59,532 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:15:59,537 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:03,567 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:03,572 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:07,626 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:07,630 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:11,723 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:11,727 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:15,754 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:15,760 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:20,484 - root - INFO - Logger setup done, starting web server
2017-06-20 17:16:20,485 - CANServer - INFO - Logger Added
2017-06-20 17:16:23,861 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:16:23,862 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:16:23,873 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:16:23,874 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:16:23,881 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:16:23,886 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:28,003 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:28,008 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:32,082 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:32,087 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:36,194 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:36,198 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:40,237 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:40,241 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:44,277 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:44,282 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:48,393 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:48,397 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:52,475 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:52,480 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:56,569 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:16:56,573 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("Object of type 'bytes' is not JSON serializable",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 119, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.6/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.6/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.6/json/encoder.py", line 180, in default
    o.__class__.__name__)
TypeError: Object of type 'bytes' is not JSON serializable
2017-06-20 17:18:16,156 - root - INFO - Logger setup done, starting web server
2017-06-20 17:18:16,156 - CANServer - INFO - Logger Added
2017-06-20 17:18:29,467 - root - INFO - Logger setup done, starting web server
2017-06-20 17:18:29,468 - CANServer - INFO - Logger Added
2017-06-20 17:18:39,975 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:18:39,976 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:18:39,996 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:18:39,997 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:18:40,004 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:20:47,957 - root - INFO - Logger setup done, starting web server
2017-06-20 17:20:47,958 - CANServer - INFO - Logger Added
2017-06-20 17:20:52,300 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:20:52,301 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:20:52,331 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:20:52,331 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:20:52,339 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:21:49,526 - root - INFO - Logger setup done, starting web server
2017-06-20 17:21:49,526 - CANServer - INFO - Logger Added
2017-06-20 17:21:53,487 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:21:53,488 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:21:53,516 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:21:53,516 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:21:53,523 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:22:31,800 - root - INFO - Logger setup done, starting web server
2017-06-20 17:22:31,800 - CANServer - INFO - Logger Added
2017-06-20 17:22:36,488 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:22:36,489 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:22:36,520 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].phys)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 88, in phys
    value = self.od.decode_phys(self.raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:23:04,253 - root - INFO - Logger setup done, starting web server
2017-06-20 17:23:04,254 - CANServer - INFO - Logger Added
2017-06-20 17:23:07,609 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:23:07,610 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:23:07,639 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=TypeError("unsupported operand type(s) for -: 'bytes' and 'int'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 36, in getData
    data = str(self.translate(canNode.sdo[self.key].raw))
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 26, in translate
    valueScaled = float(value - self.fromMin) / float(fromSpan)
TypeError: unsupported operand type(s) for -: 'bytes' and 'int'
2017-06-20 17:23:51,877 - root - INFO - Logger setup done, starting web server
2017-06-20 17:23:51,878 - CANServer - INFO - Logger Added
2017-06-20 17:23:55,368 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:23:55,369 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:23:55,401 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:23:55,402 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:23:55,409 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:24:53,488 - root - INFO - Logger setup done, starting web server
2017-06-20 17:24:53,489 - CANServer - INFO - Logger Added
2017-06-20 17:24:58,974 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:24:58,974 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:24:58,999 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 49, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 78, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].phys)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 88, in phys
    value = self.od.decode_phys(self.raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 17:26:19,316 - root - INFO - Logger setup done, starting web server
2017-06-20 17:26:19,317 - CANServer - INFO - Logger Added
2017-06-20 17:26:24,121 - can.socketcan.native - INFO - Created a socket
2017-06-20 17:26:24,122 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 17:26:24,154 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 17:26:24,155 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 17:26:24,162 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 18:27:41,695 - root - INFO - Logger setup done, starting web server
2017-06-20 18:27:41,696 - CANServer - INFO - Logger Added
2017-06-20 18:27:46,413 - can.socketcan.native - INFO - Created a socket
2017-06-20 18:27:46,414 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 18:27:46,449 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 18:27:46,450 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 18:27:46,457 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 18:54:14,488 - root - INFO - Logger setup done, starting web server
2017-06-20 18:54:14,489 - CANServer - INFO - Logger Added
2017-06-20 18:54:20,132 - can.socketcan.native - INFO - Created a socket
2017-06-20 18:54:20,133 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 18:54:20,161 - canopen.nmt - INFO - Sending NMT command 0x80 to node 38
2017-06-20 18:54:20,162 - canopen.nmt - INFO - Changing NMT state to PRE-OPERATIONAL
2017-06-20 18:54:20,169 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 57, in initNetwork
    self.node.pdo.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 66, in save
    pdo_map.save()
  File "/usr/local/lib/python3.6/site-packages/canopen/pdo.py", line 279, in save
    cob_id = self.com_record[1].raw
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 18:55:50,765 - root - INFO - Logger setup done, starting web server
2017-06-20 18:55:50,765 - CANServer - INFO - Logger Added
2017-06-20 18:55:55,487 - can.socketcan.native - INFO - Created a socket
2017-06-20 18:55:55,487 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:06:44,525 - root - INFO - Logger setup done, starting web server
2017-06-20 19:06:44,526 - CANServer - INFO - Logger Added
2017-06-20 19:06:50,932 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:06:50,932 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:06:50,943 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 113, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 77, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:07:25,995 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:07:25,996 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:08:39,906 - root - INFO - Logger setup done, starting web server
2017-06-20 19:08:39,906 - CANServer - INFO - Logger Added
2017-06-20 19:08:49,228 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:08:49,228 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:09:37,322 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:09:37,327 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:09:40,145 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=TypeError("'<' not supported between instances of 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 110, in consumer
    if float(co["updateRate"]) < self.updateRate:
TypeError: '<' not supported between instances of 'float' and 'str'
2017-06-20 19:09:40,375 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:43,173 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:43,484 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:46,248 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:46,552 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:49,325 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:49,621 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:52,397 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:52,698 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:55,494 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:55,770 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:58,587 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:09:58,839 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:01,658 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:01,902 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:04,725 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:04,967 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:07,787 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:08,033 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:10,853 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:11,099 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:13,917 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:14,166 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:16,982 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:17,238 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:20,053 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:20,303 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:23,121 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:23,367 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:26,191 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:26,438 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:29,262 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:29,510 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:32,328 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:32,577 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:35,397 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:35,647 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:38,461 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:38,713 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:41,555 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:41,817 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:44,630 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:45,119 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:47,699 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:48,199 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:50,770 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:51,269 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:53,839 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:54,346 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:56,907 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:10:57,417 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:00,022 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:00,486 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:03,098 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:03,560 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:06,195 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:06,634 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:09,268 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:09,706 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:12,337 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:12,773 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:15,684 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:15,834 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:18,750 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:18,897 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:21,817 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:21,962 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:24,893 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:25,035 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:27,969 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:28,102 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:31,039 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:31,171 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:34,110 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:34,236 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:37,178 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:37,301 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:40,249 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:40,365 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:43,314 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:43,430 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:46,381 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:46,509 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:49,444 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:49,580 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:52,511 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:52,645 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:55,580 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:55,712 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:11:58,402 - root - INFO - Logger setup done, starting web server
2017-06-20 19:11:58,403 - CANServer - INFO - Logger Added
2017-06-20 19:12:03,199 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=TypeError("'<' not supported between instances of 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 110, in consumer
    if float(co["updateRate"]) < self.updateRate:
TypeError: '<' not supported between instances of 'float' and 'str'
2017-06-20 19:12:03,784 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:06,226 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:06,935 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:09,287 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:10,002 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:12,358 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:13,069 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:15,429 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:16,140 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:18,492 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:19,207 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:21,558 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:22,293 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:24,629 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:25,384 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:27,700 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:28,454 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:30,766 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:31,525 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:33,833 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:34,595 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:36,901 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:37,672 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:39,977 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:40,740 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:43,041 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:43,807 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:46,111 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:46,873 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:49,180 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:49,944 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:52,248 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:53,012 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:55,318 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:56,081 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:58,387 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:12:59,159 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:01,454 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:02,226 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:04,533 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:05,298 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:07,597 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:08,367 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:10,669 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:11,428 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:13,734 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 127, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 117, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:45,482 - root - INFO - Logger setup done, starting web server
2017-06-20 19:13:45,483 - CANServer - INFO - Logger Added
2017-06-20 19:13:51,040 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=TypeError("'<' not supported between instances of 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 111, in consumer
    if float(co["updateRate"]) < self.updateRate:
TypeError: '<' not supported between instances of 'float' and 'str'
2017-06-20 19:13:51,634 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:54,069 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:54,767 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:57,137 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:13:57,831 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:00,203 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:00,903 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:03,270 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:03,979 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:06,336 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:07,043 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:09,406 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:10,130 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:12,473 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:13,208 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:15,550 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:16,275 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:18,620 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:19,342 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:21,692 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:22,418 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:24,765 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:25,506 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:27,836 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:28,570 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:30,901 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:31,636 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:33,966 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:34,699 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:37,037 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:37,763 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:40,104 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:40,829 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:43,174 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:43,897 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:46,250 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:46,961 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:49,337 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:50,022 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    message = await self.producer()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    await asyncio.sleep(self.updateRate)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:52,409 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:53,093 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:55,469 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:56,158 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:58,658 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:14:59,277 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:15:01,828 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:15:02,340 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:15:05,093 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:15:05,468 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:126> exception=TypeError("unsupported operand type(s) for +: 'float' and 'str'",)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 118, in producer
    return json.dumps(self.CAN_Data)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 474, in sleep
    future, result)
  File "/usr/local/lib/python3.6/asyncio/base_events.py", line 542, in call_later
    timer = self.call_at(self.time() + delay, callback, *args)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
2017-06-20 19:15:09,684 - root - INFO - Logger setup done, starting web server
2017-06-20 19:15:09,685 - CANServer - INFO - Logger Added
2017-06-20 19:15:33,430 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:15:33,433 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 310, in send
    yield from self.ensure_open()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 402, in ensure_open
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:15:33,434 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 310, in send
    yield from self.ensure_open()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 402, in ensure_open
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:15:33,435 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:16:10,513 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 310, in send
    yield from self.ensure_open()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 402, in ensure_open
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:16:10,515 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:16:10,516 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 310, in send
    yield from self.ensure_open()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 402, in ensure_open
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:16:10,517 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:18:17,262 - websockets.protocol - INFO - Failing the WebSocket connection: 1006 
2017-06-20 19:18:17,263 - websockets.protocol - INFO - Failing the WebSocket connection: 1006 
2017-06-20 19:18:17,263 - websockets.protocol - INFO - Failing the WebSocket connection: 1011 
2017-06-20 19:18:17,264 - websockets.protocol - INFO - Failing the WebSocket connection: 1011 
2017-06-20 19:18:17,264 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=ConnectionClosed('WebSocket connection is closed: code = 1006, no reason.',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 571, in write_frame
    yield from self.writer.drain()
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 333, in drain
    yield from self._protocol._drain_helper()
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 204, in _drain_helper
    raise ConnectionResetError('Connection lost')
ConnectionResetError: Connection lost

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 320, in send
    yield from self.write_frame(opcode, data)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 576, in write_frame
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1006, no reason.
2017-06-20 19:18:17,270 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.producer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:125> exception=ConnectionClosed('WebSocket connection is closed: code = 1006, no reason.',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 571, in write_frame
    yield from self.writer.drain()
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 333, in drain
    yield from self._protocol._drain_helper()
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 204, in _drain_helper
    raise ConnectionResetError('Connection lost')
ConnectionResetError: Connection lost

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 128, in producer_handler
    await websocket.send(message)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 320, in send
    yield from self.write_frame(opcode, data)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 576, in write_frame
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1006, no reason.
2017-06-20 19:18:17,272 - websockets.server - INFO - Connection error in closing handshake
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/websockets/server.py", line 94, in handler
    yield from self.close()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 242, in close
    self.worker_task, self.timeout, loop=self.loop)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 352, in wait_for
    return fut.result()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 414, in run
    msg = yield from self.read_message()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 436, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 491, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 526, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib/python3.6/site-packages/websockets/framing.py", line 80, in read_frame
    data = yield from reader(2)
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/local/lib/python3.6/asyncio/selector_events.py", line 762, in write
    n = self._sock.send(data)
ConnectionResetError: [Errno 104] Connection reset by peer
2017-06-20 19:18:17,284 - websockets.server - INFO - Connection error in closing handshake
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/websockets/server.py", line 94, in handler
    yield from self.close()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 242, in close
    self.worker_task, self.timeout, loop=self.loop)
  File "/usr/local/lib/python3.6/asyncio/tasks.py", line 352, in wait_for
    return fut.result()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 414, in run
    msg = yield from self.read_message()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 436, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 491, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 526, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib/python3.6/site-packages/websockets/framing.py", line 80, in read_frame
    data = yield from reader(2)
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/local/lib/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/local/lib/python3.6/asyncio/selector_events.py", line 762, in write
    n = self._sock.send(data)
ConnectionResetError: [Errno 104] Connection reset by peer
2017-06-20 19:24:38,128 - root - INFO - Logger setup done, starting web server
2017-06-20 19:24:38,129 - CANServer - INFO - Logger Added
2017-06-20 19:28:13,774 - root - INFO - Logger setup done, starting web server
2017-06-20 19:28:13,775 - CANServer - INFO - Logger Added
2017-06-20 19:31:31,743 - root - INFO - Logger setup done, starting web server
2017-06-20 19:31:31,744 - CANServer - INFO - Logger Added
2017-06-20 19:33:39,381 - root - INFO - Logger setup done, starting web server
2017-06-20 19:33:39,381 - CANServer - INFO - Logger Added
2017-06-20 19:35:48,080 - root - INFO - Logger setup done, starting web server
2017-06-20 19:35:48,081 - CANServer - INFO - Logger Added
2017-06-20 19:35:56,149 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:35:56,156 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:36:00,079 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:36:00,082 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:36:30,431 - root - INFO - Logger setup done, starting web server
2017-06-20 19:36:30,432 - CANServer - INFO - Logger Added
2017-06-20 19:36:49,066 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:36:49,073 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:37:36,677 - root - INFO - Logger setup done, starting web server
2017-06-20 19:37:36,677 - CANServer - INFO - Logger Added
2017-06-20 19:37:42,547 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:37:42,553 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:37:45,317 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:37:45,318 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:42:22,040 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:42:22,043 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:43:08,361 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:43:08,364 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:43:17,785 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:43:17,789 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:43:33,021 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:43:33,022 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:43:33,075 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:44:05,749 - root - INFO - Logger setup done, starting web server
2017-06-20 19:44:05,750 - CANServer - INFO - Logger Added
2017-06-20 19:44:11,429 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:44:11,429 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:44:11,451 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:46:20,880 - root - INFO - Logger setup done, starting web server
2017-06-20 19:46:20,881 - CANServer - INFO - Logger Added
2017-06-20 19:46:23,458 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:46:23,459 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:46:23,478 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:46:37,909 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:46:37,910 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:46:37,926 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:49:56,222 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:49:56,229 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:51:02,244 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:51:02,248 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:51:15,409 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:51:15,413 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 19:51:26,529 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:51:26,530 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:51:26,550 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:51:52,495 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:51:52,496 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:51:52,512 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=SdoCommunicationError('Node returned a value for 0x3207:0 instead, maybe there is another SDO client communicating on the same SDO channel?',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 24, in data
    return self.get_data()
  File "/usr/local/lib/python3.6/site-packages/canopen/sdo.py", line 219, in get_data
    return self.sdo_node.upload(self.od.index, self.od.subindex)
  File "/usr/local/lib/python3.6/site-packages/canopen/sdo.py", line 94, in upload
    return ReadableStream(self, index, subindex).read()
  File "/usr/local/lib/python3.6/site-packages/canopen/sdo.py", line 343, in __init__
    "on the same SDO channel?").format(res_index, res_subindex))
canopen.sdo.SdoCommunicationError: Node returned a value for 0x3207:0 instead, maybe there is another SDO client communicating on the same SDO channel?
2017-06-20 19:52:00,589 - root - INFO - Logger setup done, starting web server
2017-06-20 19:52:00,590 - CANServer - INFO - Logger Added
2017-06-20 19:52:05,770 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:52:05,771 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:52:05,794 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:53:52,963 - root - INFO - Logger setup done, starting web server
2017-06-20 19:53:52,963 - CANServer - INFO - Logger Added
2017-06-20 19:53:56,084 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:53:56,085 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:53:56,107 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:54:26,663 - root - INFO - Logger setup done, starting web server
2017-06-20 19:54:26,664 - CANServer - INFO - Logger Added
2017-06-20 19:54:29,852 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:54:29,852 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:54:29,876 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:55:36,365 - root - INFO - Logger setup done, starting web server
2017-06-20 19:55:36,366 - CANServer - INFO - Logger Added
2017-06-20 19:55:39,566 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:55:39,567 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:55:39,592 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 19:56:33,023 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:56:33,025 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:56:33,043 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=SdoCommunicationError('Node returned a value for 0x3207:0 instead, maybe there is another SDO client communicating on the same SDO channel?',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 24, in data
    return self.get_data()
  File "/usr/local/lib/python3.6/site-packages/canopen/sdo.py", line 219, in get_data
    return self.sdo_node.upload(self.od.index, self.od.subindex)
  File "/usr/local/lib/python3.6/site-packages/canopen/sdo.py", line 94, in upload
    return ReadableStream(self, index, subindex).read()
  File "/usr/local/lib/python3.6/site-packages/canopen/sdo.py", line 343, in __init__
    "on the same SDO channel?").format(res_index, res_subindex))
canopen.sdo.SdoCommunicationError: Node returned a value for 0x3207:0 instead, maybe there is another SDO client communicating on the same SDO channel?
2017-06-20 19:58:47,341 - root - INFO - Logger setup done, starting web server
2017-06-20 19:58:47,341 - CANServer - INFO - Logger Added
2017-06-20 19:58:53,038 - can.socketcan.native - INFO - Created a socket
2017-06-20 19:58:53,039 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 19:58:53,059 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 20:01:09,717 - root - INFO - Logger setup done, starting web server
2017-06-20 20:01:09,718 - CANServer - INFO - Logger Added
2017-06-20 20:01:16,430 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:01:16,430 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:01:16,449 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 20:01:45,861 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:01:45,867 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:01:51,000 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:01:51,002 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:01:51,023 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ObjectDictionaryError('Mismatch between expected and actual data size',)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 264, in decode_raw
    value, = self.STRUCT_TYPES[self.data_type].unpack(data)
struct.error: unpack requires a bytes object of length 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 124, in consumer_handler
    await self.consumer(message)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 114, in consumer
    self.initNetwork()
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 59, in initNetwork
    self.sdo_update(co)
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 76, in sdo_update
    self.CAN_Data[co.key] = co.getData(self.node)
  File "/home/pi/CAN/CANServer/CANServer/python/CANObject.py", line 34, in getData
    print(canNode.sdo[self.key].raw)
  File "/usr/local/lib/python3.6/site-packages/canopen/common.py", line 64, in raw
    value = self.od.decode_raw(self.data)
  File "/usr/local/lib/python3.6/site-packages/canopen/objectdictionary/__init__.py", line 268, in decode_raw
    "Mismatch between expected and actual data size")
canopen.objectdictionary.ObjectDictionaryError: Mismatch between expected and actual data size
2017-06-20 20:02:09,978 - root - INFO - Logger setup done, starting web server
2017-06-20 20:02:09,978 - CANServer - INFO - Logger Added
2017-06-20 20:02:13,437 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:02:13,438 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:04:34,951 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:04:34,957 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:04:37,487 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:04:37,488 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:04:53,417 - root - INFO - Logger setup done, starting web server
2017-06-20 20:04:53,417 - CANServer - INFO - Logger Added
2017-06-20 20:04:56,732 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:04:56,732 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:05:13,966 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:05:13,967 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:05:58,141 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:05:58,147 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:06:13,825 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:06:13,828 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:121> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 123, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:09:06,187 - root - INFO - Logger setup done, starting web server
2017-06-20 20:09:06,188 - CANServer - INFO - Logger Added
2017-06-20 20:09:16,208 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:09:16,209 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:11:35,589 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:11:35,590 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:14:08,673 - root - INFO - Logger setup done, starting web server
2017-06-20 20:14:08,673 - CANServer - INFO - Logger Added
2017-06-20 20:14:18,336 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:14:18,336 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:15:29,971 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:15:29,982 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:15:45,242 - root - INFO - Logger setup done, starting web server
2017-06-20 20:15:45,242 - CANServer - INFO - Logger Added
2017-06-20 20:15:49,310 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:15:49,310 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:16:10,270 - root - INFO - Logger setup done, starting web server
2017-06-20 20:16:10,271 - CANServer - INFO - Logger Added
2017-06-20 20:16:18,610 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:16:18,611 - canopen.network - INFO - Connected to 'native socketcan channel'
2017-06-20 20:17:14,704 - root - INFO - Logger setup done, starting web server
2017-06-20 20:17:14,704 - CANServer - INFO - Logger Added
2017-06-20 20:17:21,927 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:17:21,934 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<CANServer.consumer_handler() done, defined at /home/pi/CAN/CANServer/CANServer/python/CANServer.py:120> exception=ConnectionClosed('WebSocket connection is closed: code = 1000, no reason.',)>
Traceback (most recent call last):
  File "/home/pi/CAN/CANServer/CANServer/python/CANServer.py", line 122, in consumer_handler
    message = await websocket.recv()
  File "/usr/local/lib/python3.6/site-packages/websockets/protocol.py", line 299, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000, no reason.
2017-06-20 20:17:24,603 - can.socketcan.native - INFO - Created a socket
2017-06-20 20:17:24,604 - canopen.network - INFO - Connected to 'native socketcan channel'
